swagger: "2.0"
info:
  title: DonLog API
  description: |
    API specification for DonLog blogging project
    Server implementation must match following routes, to be compatible with frontend
  version: 1.0.0
 
schemes:
  - http

tags:
  - name: "Authentication Routes"
    description: Routes that relate to account creation and management
  - name: "Blog Routes"
    description: Routes that are used for interacting with and managing blogs
  - name: "Admin Routes"
    description: Routes that are related to server data and management
components:
  prim:
    Email:
      type: string
      example: "person@gmail.com"
    Error:
      type: string
      example: "specific message about why route failed"
    Password:
      type: string
      example: "pAs5w0Rd19#"
    NameFirst:
      type: string
      example: "Donald"
    NameLast:
      type: string
      example: "Danilo"
    NameUser:
      type: string
      example: "DoFn"
    Session:
      type: string
      example: "abgo1940vwnfo139gfn"
    BlogId:
      type: integer
      example: "123"
    BlogTitle:
      type: string
      example: "My Blog"
    BlogDescription:
      type: string
      example: "This is a blog about myself"
  return:
    Empty:
      type: object
    Session:
      type: object
      properties:
        session:
          $ref: '#/components/prim/Session'
    Error:
      type: object
      properties:
        error:
          $ref: '#/components/prim/Error'
    BlogId:
      type: object
      properties:
        blogId: 
          $ref: '#/components/prim/BlogId'
  body:
    Register:
        in: body
        name: body
        required: true
        schema:
          type: object
          properties:
            email:
              $ref: '#/components/prim/Email'
            password:
              $ref: '#/components/prim/Password'
            nameFirst:
              $ref: '#/components/prim/NameFirst'
            nameLast:
              $ref: '#/components/prim/NameLast'
            nameUser:
              $ref: '#/components/prim/NameUser'
    Unregister:
        in: body
        name: body
        required: true
        schema:
          type: object
          properties:
            email:
              $ref: '#/components/prim/Email'
            password:
              $ref: '#/components/prim/Password'
    Login:
        in: body
        name: body
        required: true
        schema:
          type: object
          properties:
            password:
              $ref: '#/components/prim/Password'
            nameUser:
              $ref: '#/components/prim/NameUser'
    CreateBlog:
        in: body
        name: body
        required: true
        schema:
          type: object
          properties:
            title:
              $ref: '#/components/prim/BlogTitle'
            description:
              $ref: '#/components/prim/BlogDescription'
  header:
    Session:
      in: header
      name: session
      required: true
      schema:
        type: string
paths:
  /user/auth/register:
    post:
      summary: Register a new DonLog user
      description: This route registers a DonLog account in the system, when given user details
      tags:
        - "Authentication Routes"
      parameters:
        - $ref: '#/components/body/Register'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/components/return/Session'
        400:
          description: |
            If any of the following conditions are met: 
            - Email address is in use
            - Email is invalid (using https://pkg.go.dev/github.com/AfterShip/email-verifier)
            - Username is in use
            - NameFirst or NameLast has characters other than alphabetic characters
            - NameFirst or NameLast is empty
            - Password is less than 10 characters
            - Password does not contain at least 1 capital letter, lowercase letter, number or special character
          schema:
            $ref: '#/components/return/Error'
    delete:
      summary: Unregister a DonLog user
      description: This route deletes a DonLog user's account, when in a valid session, after re-entering account details
      tags:
        - "Authentication Routes"
      parameters:
        - $ref: '#/components/header/Session'
        - $ref: '#/components/body/Unregister'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/components/return/Empty'
        401:
          description: Session is invalid
          schema:
            $ref: '#/components/return/Error'
        400:
          description: |
            If any of the following are true:
            - Email does not refer to logged in user
            - Password does not match logged in user's password
          schema:
            $ref: '#/components/return/Error'
  /user/auth/login:
    post:
      summary: Log in a DonLog user
      description: Takes in account information, and generates a session if the provided details match an account
      tags:
        - "Authentication Routes"
      parameters:
        - $ref: '#/components/body/Login'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/components/return/Session'
        400:
          description: |
            If any of the following are true:
            - Username does not exist
            - Password is not correct for the given account
          schema:
            $ref: '#/components/return/Error'
    delete:
      summary: Log out a DonLog user
      description: Deletes an active user session, when given in the header
      tags:
        - "Authentication Routes"
      parameters:
        - $ref: '#/components/header/Session'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/components/return/Empty'
        401:
          description: Session is invalid
          schema:
            $ref: '#/components/return/Error'
  /user/blog:
    post:
      summary: Create a new blog 
      description: Takes in blog information, and creates a blog with said information in the system
      tags:
        - "Blog Routes"
      parameters:
        - $ref: '#/components/header/Session'
        - $ref: '#/components/body/CreateBlog'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/components/return/BlogId'
        401:
          description: Session is invalid
          schema:
            $ref: '#/components/return/Error'
        400:
          description: |
            If any of the following are true:
            - Blog title is under 6 characters
            - Blog title is not alphanumeric
            - Blog description exceeds 1000 characters
          schema:
            $ref: '#/components/return/Error'
